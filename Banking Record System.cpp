#include<iostream>
#include<fstream>
#include<cstring>// this header file is used beacuse of the strings used in the program
#include<cstdlib>// used to generate the random numbers in prog
#include<ctime>// this also used to generate random account number
#include<windows.h>// this header file is included to generate the current time
using namespace std;
// beta is my node , I used queue link list node is essential for link list so i named beta to the node
struct beta
{
	// these are my attributes
	string data;// use to store the CNIC of the account holder
	string name;
	double amount;// total amount in his / her account
	int accountno;// a random account no generated by the bank and stored in this variable
	beta *next;// this pointer holds the address of the next node


};
beta *head = NULL;//this is my head pointer which holds the address of the first node
//This code is shite
// alpha is my link list class which work on queue behaviour
class alpha
{
public:
	void create_node()
	{
		beta *a = new beta;
		cout << "Please Enter Your CNIC No.  : ";
		cin >> a->data;
		cout << "Please Enter Your Name :";
		cin >> a->name;
		cout << "Enter Your Amount  :";
		cin >> a->amount;
		int r = (rand() % 57000) + 56000;//generates random number between 56000 to 57000
		a->accountno = r;
		cout << "YOU HAVE BEEN ASSINGNED WITH ACCOUNT NO :" << r << endl;
		a->next = NULL;
		if (head == NULL)
		{
			head = a;
		}
		else
		{
			beta *temp = head;
			while (temp->next != NULL)
			{
				temp = temp->next;
			}
			temp->next = a;
		}
		ofstream fout("BANKRECORD.txt",ios::app);//creates a file and writes information in the file
		fout<<"BANK RECORD"<<endl;
		fout<<"YOUR NAME:"<<a->name<<endl;
		fout<<"YOUR ACCOUNT NO:"<<a->accountno<<endl;
		fout<<"YOUR CNIC:"<<a->data<<endl;
		fout<<"YOUR AMOUNT: "<<a->amount<<endl;
		fout.close();
	}
	
	void enque()
	{
		//making of node
		create_node();
	}
	void deque()
	{
		//deleting the node
		if(head==NULL)
		{
			cout<<"FIRST OPEN AN ACCOUNT"<<endl;
	
		}
		beta *tempptr = new beta;

		tempptr = head;
		head = head->next;
		delete tempptr;
		cout << "The element is deleted. " << endl;
	}
	void depositmoney()
	{
		//deposite in the money in your desire account
		if (head == NULL)
		{
			cout << "Please open your account first then your cash would be deposited" << endl;
			return;
		}
		int dm;				//deposit money
		//use your cnic number for this
		string cnic;
		cout << "Enter your CNIC No." << endl;
		cin >> cnic;
		beta *temp = head;
		while (temp != NULL)
		{
			if (temp->data == cnic)
			{
				cout << "Enter the amount of money you want to deposit" << endl;
				cin >> dm;
				temp->amount = temp->amount + dm;
				SYSTEMTIME h;
				//used to generate the current time
				GetLocalTime (&h);
				cout<<" *******************************************"<<endl;
				cout<<" *               Deposit SLIP              *"<<endl;
				cout<<" *                                         *"<<endl;
				cout<<" *"<<" YOUR NAME :"<<temp->name<<"         *"<<endl;
				cout<<" *"<<"YOUR Account NO:"<<temp->accountno<<"*"<<endl;
				cout<<" *"<<"Deposited Money"<<dm<<"             *"<<endl;
				cout<<" *Time : "<<h.wHour<<":"<<h.wMinute<<"     *"<<endl;
				cout<<" *                                         *"<<endl;
				cout<<" s*******************************************"<<endl;
			}
			temp = temp->next;
		}
	}
	void withdrawmoney()
	{
		//withdraw the money from your desired account
		if(head==NULL)
		{
			cout<<"FIRST CREATE ACCOUNT"<<endl;
			return;
		}
		int wdm;// withdraw money
		string cnic;
		cout << "Enter your cnic no" << endl;
		cin >> cnic;
		// use cnic for finding the account
		beta *temp = head;
		while (temp != NULL)
		{
			if (temp->data == cnic)
			{

				cout << "Enter the amount you want to withdraw from the account" << endl;
				cin >> wdm;
				SYSTEMTIME h;
				GetLocalTime (&h);//generate current time
				cout<<"  *******************************************"<<endl;
				cout<<"  *               WITHDRAW SLIP             *"<<endl;
				cout<<"  *                                         *"<<endl;
				cout<<"  *"<<" YOUR NAME :"<<temp->name<<"         *"<<endl;
				cout<<"  *"<<"YOUR Account NO:"<<temp->accountno<<"*"<<endl;
				cout<<"  *"<<"Withdraw Money"<<wdm<<"              *"<<endl;
				cout<<"  *Time : "<<h.wHour<<":"<<h.wMinute<<"     *"<<endl;
				cout<<"  *                                         *"<<endl;
				cout<<"  *******************************************"<<endl;
				if (wdm>temp->amount)
				{
					cout << "YOU DON'T HAVE SUFFICIENT MONEY IN YOUR ACCOUNT" << endl;
				}
				else
				{
					temp->amount = temp->amount - wdm;
				}
			}
			temp = temp->next;
		}
    }
	bool isEmpty()
	{
		if (head->next == 0)
			return true;
		else
			return false;
	}
	void isFull()
	{
		if (head->next != NULL)
		{
			cout << "LinkedList is full. " << endl;
		}
		else
		{
			cout << "Its not full. " << endl;
		}
	}
	void display()
	{
		// display your desired account
		//use cnic to view your account details
		if(head==NULL)
		{
			cout<<"FIRST CREATE ACCOUNT"<<endl;
			return;
		}
		beta *temp = head;
		string check;
		cout<<"Enter your CNIC to view your account details :"<<endl;
		cin>>check;
		while (temp != NULL)
		{
			if(check==temp->data)
			{
		
			cout << "YOUR CNIC : " << temp->data << endl;
			cout << "YOUR ACCOUNT NO"<<temp->accountno<<endl;
			cout << "YOUR NAME " << temp->name << endl;
			cout << "YOUR AMOUNT " << temp->amount << endl;
		}
			temp = temp->next;
		}
	}
	void bankrecord()
	{
		// manager function
		 string ch,check;//ch for file handling ch stands for character
	    cout<<"ENTER THE PASSWORD TO VIEW RECORDS"<<endl;
	    cin>>check;
	    //manager password protection
	    if(check=="pakistanzindabad")
	    {
	    ifstream fin("BANKRECORD.txt");
	
		while(!fin.eof())
		{
			fin>>ch;
			cout<<ch<<endl;
		}
		fin.close();
	}
	else
	{
		cout<<"INVALID PASSWORD"<<endl;
		return;
	}
	}


};
class stack
{
	public:
		int *data ;
		int capacity, top;
		stack(int s)
		{
			data = new int [5];
			capacity = s;
			top = 0;
		}
		bool isfull()
		{
			if (top == capacity )
			{
				return true;
				
			}
			else 
			{
			return false;
		}
		}
		void push (int d)
		{
			if (isfull())
			{
				cout<<" "<<endl;
			}
			data [top ++] = d;
		}
		bool isempty()
		{
			if (top == 0)
			{
				return true;
			}
		}
		int pop()
		{
			if (isempty())
			{
				cout<< " "<<endl;
			}
		
		return data[--top];
}
};
int main()
{
	//menu driven 
	label:
   	cout<<" "<<endl;
	cout<<" "<<endl;
	cout << "                          *******************************************" << endl;
	cout << "                          *                                         *" << endl;
	cout << "                          *         BANKING RECORD SYSTEM           *" << endl;
	cout << "                          *                                         *" << endl;
	cout << "                          *******************************************" << endl;
	alpha obj;    //making object
	stack objects(5);
	int n = 0;
	do
	{
        cout << "                                            MAIN MENU:                         " << endl;
		cout<<  "                         ------------------------------------------------------"<<endl;
		cout << "                         |         Press 1 To Open an Account:                |" << endl;
		cout << "                         |         Press 2 for Closed Account:                |" << endl;
		cout << "                         |         Press 3 to Deposit Money:                  |" << endl;
		cout << "                         |         Press 4 to Withdraw Money:                 |" << endl;
		cout << "                         |         Press 5 for Bank Statement:                |" << endl;
		cout<<  "                         |  Press 6 for Displaying Employee wages:            |"<<endl;
		cout<<  "                         |Press 7 for viewing all records (password required) |"<<endl;
		cout<<  "                         |           Press 8 to EXIT                          |"<<endl;
		cout<<  "                         |             OPTIONS (1-8)                          |"<<endl;
		cout<<  "                         ------------------------------------------------------"<<endl;
		cin >> n;
		switch (n)
		{
       	cout << "                                            MAIN MENU:                         " << endl;
		cout<<  "                         ------------------------------------------------------"<<endl;
		cout << "                         |         Press 1 To Open an Account:                |" << endl;
		cout << "                         |         Press 2 for Closed Account:                |" << endl;
		cout << "                         |         Press 3 to Deposit Money:                  |" << endl;
		cout << "                         |         Press 4 to Withdraw Money:                 |" << endl;
		cout << "                         |         Press 5 for Bank Statement:                |" << endl;
		cout<<  "                         |  Press 6 for Displaying Employee wages:            |"<<endl;
		cout<<  "                         |Press 7 for viewing all records (password required) |"<<endl;
		cout<<  "                         |           Press 8 to EXIT                          |"<<endl;
		cout<<  "                         |             OPTIONS (1-8)                          |"<<endl;
		cout<<  "                         ------------------------------------------------------"<<endl;
		case 1: cout << "You choose Open Account: " << endl;
			obj.enque();
			break;
		case 2: cout << "Your account is deleted: " << endl;
			obj.deque();
			goto label;
			break;
		case 3: cout << " You choose Deposit Money:" << endl;
			obj.depositmoney();
			break;
		case 4:cout << "You choose withdraw data:" << endl;
			obj.withdrawmoney();
			break;
		case 5:

			cout << "Displaying value: " << endl;
			system("cls");
			obj.display();
			cout << endl;
			break;
		
		case 6:
		objects.push(30000);
			objects.push(40000);
				objects.push(50000);
				cout<<"Salary Status"<<endl;
				cout<<"manager: "<<objects.pop();
				cout<<"employee:"<<objects.pop();
				cout<<"cashier:"<<objects.pop()<<endl;
				cout<<endl;
				break;
		case 7:
			system("cls");
			obj.bankrecord();
			goto label;
		case 8:
		return 0;		
}
	} while (!n == 0);
	system("pause");
	return 0;
}
